# Generated by Django 4.2.1 on 2024-04-09 17:54

from django.db import migrations, models
import django.db.models.deletion
import note.models
import tinymce.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, verbose_name='名称')),
            ],
            options={
                'verbose_name': '笔记分类',
                'verbose_name_plural': '笔记分类',
                'db_table': 'note_category',
            },
        ),
        migrations.CreateModel(
            name='Note',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('review_date', models.DateField(blank=True, null=True, verbose_name='复习日期')),
                ('review_stage', models.PositiveSmallIntegerField(default=0, verbose_name='复习阶段')),
                ('last_review_date', models.DateField(blank=True, null=True, verbose_name='最近复习日期')),
                ('last_review_feedback', models.PositiveSmallIntegerField(blank=True, choices=[(0, '基本忘了'), (1, '有些忘了'), (2, '基本记得'), (1, '非常清楚')], null=True, verbose_name='最近复习反馈')),
                ('title', models.CharField(max_length=32, verbose_name='主题')),
                ('is_private', models.BooleanField(default=False, verbose_name='是否私有')),
                ('content', tinymce.models.HTMLField(verbose_name='内容')),
                ('likes', models.PositiveIntegerField(default=0, verbose_name='点赞数')),
                ('views', models.PositiveIntegerField(default=0, verbose_name='浏览量')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='最近更新时间')),
                ('is_delete', models.BooleanField(default=False, verbose_name='是否已删除')),
                ('delete_date', models.DateField(blank=True, null=True, verbose_name='删除时间')),
            ],
            options={
                'verbose_name': '笔记',
                'verbose_name_plural': '笔记',
            },
        ),
        migrations.CreateModel(
            name='NoteComments',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.CharField(max_length=120, verbose_name='内容')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
            ],
            options={
                'verbose_name': '笔记评论',
                'verbose_name_plural': '笔记评论',
                'db_table': 'note_comments',
            },
        ),
        migrations.CreateModel(
            name='NoteTags',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': '笔记-笔记标签',
                'verbose_name_plural': '笔记-笔记标签',
                'db_table': 'note_note_tags',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, verbose_name='名称')),
            ],
            options={
                'verbose_name': '笔记标签',
                'verbose_name_plural': '笔记标签',
                'db_table': 'note_tag',
            },
        ),
        migrations.AddConstraint(
            model_name='tag',
            constraint=models.UniqueConstraint(fields=('name',), name='note_tag_uni_name'),
        ),
        migrations.AddField(
            model_name='notetags',
            name='category',
            field=models.ForeignKey(on_delete=models.SET(note.models.set_default_category), related_name='note_tags', to='note.category', verbose_name='类别'),
        ),
        migrations.AddField(
            model_name='notetags',
            name='note',
            field=models.ForeignKey(limit_choices_to={'is_delete': False}, on_delete=django.db.models.deletion.CASCADE, related_name='note_tags', to='note.note', verbose_name='笔记'),
        ),
        migrations.AddField(
            model_name='notetags',
            name='tag',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='note_tags', to='note.tag', verbose_name='标签'),
        ),
    ]
